#include<P33FJ32MC204.h>
void Serial_Init() // настройка линий порта 
{ 
 TRISCbits.TRISC4 = 0; // Выход SCK (RC4) 
 TRISBbits.TRISB5 = 0; // Выход LE (RB5) 

 

 TRISCbits.TRISC5 = 0; // Выход SER (RC5) - VD 
 TRISAbits.TRISA4 = 1; // Вход SDI (RA4) - SA 
} 

void Serial_Send(char VDs) // Отправление данных в регистр HC595 
{ 
 char c; 
 for (c = 0; c < 8; c++) 
 { 
 // установка требуемого логического уровня 
 // на последовательном входе SER регистра HC595 
 // начиная с последнего бита 
 if ((VDs & (1 << (7 - c))) != 0) 
 { 
 LATCbits.LATC5 = 1; 
 } 
  else 
 { 
 LATCbits.LATC5 = 0; 
 } 

 

 // формирование синхроимпульса на входе SCK 
 LATCbits.LATC4 = 1; 
 LATCbits.LATC4 = 0; 
 } 

 

 // формирование синхроимпульса на входе LE 
 LATBbits.LATB5 = 1; 
 LATBbits.LATB5 = 0; 
} 

 

char Serial_Read() // Чтение данных из регистра HC165 
{ 
 // формирование синхроимпульса на LE 
 LATBbits.LATB5 = 0; 
 LATBbits.LATB5 = 1; 

 

 // чтение логического уровня 
 // на последовательном выходе Qh регистра HC165 
 char SAs = 0x00; 
 char c; 
 for (c = 0; c < 8; c++) 
 { 
 // чтение логического уровня 
 // на последовательном выходе Qh регистра HC165 
 // сдвигая предыдущие данные влево 
 SAs <<= 1; 
 if (PORTAbits.RA4) 
 { 
 SAs |= 0x01; 
 } 

 // формирование синхроимпульса на входе SCK 
 LATCbits.LATC4 = 1; 
 LATCbits.LATC4 = 0; 
 } 


 return SAs; 
} 

 
void main() 
{ 
 Serial_Init(); // настройка линий порта 


 while (1) 
 { 
 char state = Serial_Read(); 
//Serial_Send(0b00011000)
if(state == 24){
Serial_Send(5);
}
if(state == -127){
Serial_Send(2);
}

 }
 }
